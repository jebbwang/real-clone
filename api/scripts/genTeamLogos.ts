// scripts/genTeamLogos.ts
import { writeFileSync } from 'fs';
import { request } from 'undici';

const ESPN = 'https://site.api.espn.com/apis/site/v2/sports/baseball/mlb/teams';

(async () => {
  const res = await request(ESPN);
  const json = await res.body.json();
  // Flatten out the teams array ESPN uses
  const teams = (json as {
    sports: [{
      leagues: [{
        teams: Array<{
          team: {
            abbreviation: string;
            logos?: Array<{ href: string }>;
          };
        }>;
      }];
    }];
  }).sports[0].leagues[0].teams;

  const map: Record<string, string> = {};

  teams.forEach((wrapper) => {
    const t = wrapper.team;
    const abbrev = t.abbreviation;        // "NYY"
    const logo = t.logos?.[0]?.href;      // first logo
    if (abbrev && logo) map[abbrev] = logo;
  });

  // Emit a ready-to-import TS module
  const file = `/**
 * AUTO-GENERATED by genTeamLogos.ts
 * Maps team abbreviation → logo URL (ESPN CDN)
 */
export const teamLogos: Record<string, string> = ${JSON.stringify(map, null, 2)} as const;
`;

  writeFileSync('/Users/jeffwang/Desktop/Real-Clone/web/src/constants/teamLogos.ts', file);
  console.log('✅ teamLogos.ts updated with', Object.keys(map).length, 'teams');
})();